<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Link Preview{% endblock %}</title>
    <script type="text/javascript">
        function toggleDarkMode() {
            document.body.classList.toggle("dark-mode");
        }

        function isDarkMode() {
            return document.body.classList.contains("dark-mode");
        }

        window.readyForRendering = false;
    </script>
    {% block styles %}
        {% include "style/root.jinja" %}
        {% include "style/font.jinja" %}
        {% include "style/body.jinja" %}
    {% endblock %}
</head>
<body>
<section class="main-container">
    {% block container %}{% endblock %}
</section>
<span id="qrcode"></span>
{% block meta_text %}
    {% if _meta is defined %}
        {% set _meta_parts = [] %}
        {% if _meta.cache_time is defined %}
            {% set _meta_parts = _meta_parts + ["Cached at " + _meta.cache_time] %}
        {% endif %}
        {% if _meta.fetch_time is defined %}
            {% set _meta_parts = _meta_parts + ["Fetched at " + _meta.fetch_time] %}
        {% endif %}
        {% if _meta.render_time is defined %}
            {% set _meta_parts = _meta_parts + ["Rendered at " + _meta.render_time] %}
        {% endif %}
        {% if _meta_parts|length > 0 %}
            <div class="watermark-text">{{ _meta_parts|join(" · ") }}</div>
        {% endif %}
    {% endif %}
{% endblock %}
{% block watermark_text %}
    <div class="watermark-text">Generated by Mephisto · Developed by nullqwertyuiop</div>
{% endblock %}
{% if url is defined %}
    <script type="module">
        import init, {
            make_qr,
            QrStyle,
            QrShape,
            QrType,
            EcLevel,
            RmqrStrategy
        } from "https://cdn.jsdelivr.net/gh/nullqwertyuiop/clutter@main/qrqrpar_js/qrqrpar_js.js"

        const qrElement = document.getElementById("qrcode");
        init().then(() => {
            const qrStyle = new QrStyle(
                "#657786",
                "#FFFFFF00",
                QrShape.Round,
                600,
                0
            );
            qrElement.innerHTML = make_qr(
                "{{ url }}",
                QrType.Rmqr,
                EcLevel.M,
                qrStyle,
                RmqrStrategy.Height
            );
            window.readyForRendering = true;
        });
    </script>
{% else %}
    <script type="text/javascript">
        window.readyForRendering = true;
    </script>
{% endif %}
</body>
</html>
